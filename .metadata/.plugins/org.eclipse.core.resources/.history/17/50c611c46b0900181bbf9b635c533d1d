package com.gqw.controller;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.font.FontRenderContext;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.Map;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import com.gqw.bean.User;
import com.gqw.dao.LoginMapper;

@Controller
public class LoginController {
	private String code;
	private static String myUsername;
	private static String myPassword;
	
	@Autowired
	private LoginMapper loginMapper;
	@RequestMapping("login")
	public String isLogin(Map map,String username,String password,String user_input_verifyCode,String pwd,String thirdpwd){
		myUsername=username;
		myPassword=password;
		User user=loginMapper.login(username,password,pwd,thirdpwd);
		if(user==null){
			System.out.println("用户名或者密码错了");
			return "index";
		}else if(code==null){
			System.out.println("验证码未生成");
			return "index";
		}else if(!code.equals(user_input_verifyCode)){
			System.out.println("验证码错误");
			return "index";
		}else{
			
			
			map.put("user", user);
			System.out.println("user:"+user.getUsername());
			System.out.println("传值："+username);
			user_input_verifyCode="";
			code="";
			return "main";
		}
	}
	
	
	@RequestMapping("/getVerifyCode")  
    public void generate(HttpServletResponse response, HttpSession session) {  
        ByteArrayOutputStream output = new ByteArrayOutputStream();  
        String verifyCodeValue = drawImg(output);  
  
        session.setAttribute("verifyCodeValue", verifyCodeValue);  
  
        try {  
            ServletOutputStream out = response.getOutputStream();  
            output.writeTo(out);  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
    }  
	 private String drawImg(ByteArrayOutputStream output) {  
	        code = "";  
	        // 随机产生4个字符  
	        for (int i = 0; i < 4; i++) {  
	            code += randomChar();  
	        }  
	        int width = 70;  
	        int height = 25;  
	        BufferedImage bi = new BufferedImage(width, height,  
	                BufferedImage.TYPE_3BYTE_BGR);  
	        Font font = new Font("Times New Roman", Font.PLAIN, 20);  
	        // 调用Graphics2D绘画验证码  
	        Graphics2D g = bi.createGraphics();  
	        g.setFont(font);  
	        Color color = new Color(66, 2, 82);  
	        g.setColor(color);  
	        g.setBackground(new Color(226, 226, 240));  
	        g.clearRect(0, 0, width, height);  
	        FontRenderContext context = g.getFontRenderContext();  
	        Rectangle2D bounds = font.getStringBounds(code, context);  
	        double x = (width - bounds.getWidth()) / 2;  
	        double y = (height - bounds.getHeight()) / 2;  
	        double ascent = bounds.getY();  
	        double baseY = y - ascent;  
	        g.drawString(code, (int) x, (int) baseY);  
	        g.dispose();  
	        try {  
	            ImageIO.write(bi, "jpg", output);  
	        } catch (IOException e) {  
	            e.printStackTrace();  
	        }  
	        return code;  
	    }  
	 private char randomChar() {  
	        Random r = new Random();  
	        String s = "ABCDEFGHJKLMNPRSTUVWXYZ0123456789";  
	        return s.charAt(r.nextInt(s.length()));  
	    } 
	 @RequestMapping("reinvestmentAndBonusList")
	 public String yanzhengreinvestmentAndBonusList(HttpServletRequest request,String username,String password,String pwd,String thirdpwd){
		 User user=loginMapper.login(myUsername, myPassword, pwd, thirdpwd);
		 if(user!=null){
			 return "reinvestmentAndBonusList";
		 }else{
			 request.setAttribute("jspName", "reinvestmentAndBonusList");
			 return "secondPassword"; 
		 }
	 }
}
